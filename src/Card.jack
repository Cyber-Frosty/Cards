class Card {
	field int value;
	field int suit;
	field int column;
	field boolean isFront;
	field boolean isOpened;

	constructor Card new(int x, int y, int col, boolean front, boolean opened) {
	    //col [0;6]
		//value: 1-13 (11=jack, 12=queen, 13=king)
		//suit: 0=diamond, 1=heart, 2=spade, 3=club
	    let value = x;
		let suit = y;
		let column = col;
		let isFront = front;
		let isOpened = opened;
		return this;
	}
	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}
	method void draw(int row, int layer) {
	    if (isFront) {
		    if (isOpened) {
			    do Graphics.drawFullCard(column, row, layer, value, suit);
			}
			else {
			    do Graphics.drawClosedCardFull(column, row, layer);
			}
		}
	    else {
		    if (isOpened) {
			    do Graphics.drawCardPart(column, row, layer, value, suit);
			}
			else {
			    do Graphics.drawClosedCardPart(column, row, layer);
			}
		}
		return;
	}
	method void putFront() {
	    let isFront = true;
		return;
	}
	method void putBack() {
	    let isFront = false;
		return;
	}
}